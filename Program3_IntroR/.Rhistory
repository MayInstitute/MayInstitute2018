var.equal = FALSE)
result
result$estimate[1]-result$estimate[2]
diff(summaryresult12$mean) ## same as result$estimate[1]-result$estimate[2]
summaryresult
summaryresult12 <- summaryresult[1:2, ]
diff(summaryresult12$mean) ## same as result$estimate[1]-result$estimate[2]
?diff
diff(c(5,3))
result$statistic
(result$estimate[1]-result$estimate[2])/result$statistic
result$parameter
result$p.value
sqrt(sum(summaryresult12$sd^2/summaryresult12$length)) ## same as stand error
diff(summaryresult12$mean)/sqrt(sum(summaryresult12$sd^2/summaryresult12$length))
plot(density(xt), xlim = c(-10, 10))
?hline
xt <- rt(1e5, result$parameter)
plot(density(xt), xlim = c(-10, 10))
abline(v = result$statistic, col = "red")
abline(h = 0, col = "gray")
1 - pt(result$statistic, result$parameter)
2 * (1 - pt(result$statistic, result$parameter))
?pwr.t.test
library("pwr")
alpha <- 0.05
?pwr.t.test
alpha <- 0.05
power <- 0.95
delta <- 1.5
sigma <- 1.5
d <- delta/sigma
pwr.t.test(d = d, sig.level = alpha, power = power, type = 'two.sample')
pwr.t.test(d = d, sig.level = alpha, power = NULL, type = 'two.sample')
pwr.t.test(d = d, sig.level = alpha, n=10, power = NULL, type = 'two.sample')
pwr.t.test(d = d, sig.level = alpha, n=20, power = NULL, type = 'two.sample')
delta <- seq(0.1, 0.7, .1)
nd <- length(delta)
sigma <- seq(0.1,0.5,.1)
ns <- length(sigma)
samsize <- matrix(0, nrow=ns*nd, ncol = 3)
samsize
counter <- 0
for (i in 1:nd){
for (j in 1:ns){
result <- pwr.t.test(d = delta[i]/sigma[j],
sig.level = alpha,
power = power,
type = "two.sample")
counter <- counter + 1
samsize[counter,1] <- delta[i]
samsize[counter,2] <- sigma[j]
samsize[counter,3] <- ceiling(result$n)
}
}
colnames(samsize) <- c("fd","var","value")
samsize
colnames(samsize) <- c("desiredlog2FC","variability","samplesize")
samsize
samsize <- as.data.frame(samsize)
samsize
samsize$var <- as.factor(samsize$var)
ggplot(data=samsize, aes(x=fd, y=value, group = var, colour = var)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
labs(title="Sig=0.05 Power=0.05", x="Anticipated log2 fold change", y='Sample Size (n)') +
theme(plot.title = element_text(size=20, colour="darkblue"),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
axis.text.x = element_text(size=13))
ggplot(data=samsize, aes(x=desiredlog2FC, y=samplesize, group = variability, colour = variability)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
labs(title="Sig=0.05 Power=0.05", x="Anticipated log2 fold change", y='Sample Size (n)') +
theme(plot.title = element_text(size=20, colour="darkblue"),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
axis.text.x = element_text(size=13))
samsize$variability <- as.factor(samsize$variability)
ggplot(data=samsize, aes(x=desiredlog2FC, y=samplesize, group = variability, colour = variability)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
labs(title="Sig=0.05 Power=0.05", x="Anticipated log2 fold change", y='Sample Size (n)') +
theme(plot.title = element_text(size=20, colour="darkblue"),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
axis.text.x = element_text(size=13))
2^0.5
log2(1.5)
alpha <- 0.05
# Power = 1 - beta
power <- 0.95
# anticipated log2 fold change
delta <- 0.6
# anticipated variability
sigma <- 0.5
# Effect size
# It quantifies the size of the difference between two groups
d <- delta/sigma
#Sample size estimation
pwr.t.test(d = d, sig.level = alpha, power = power, type = 'two.sample')
delta <- 1
d <- delta/sigma
pwr.t.test(d = d, sig.level = alpha, power = power, type = 'two.sample')
sigma <- 0.9
d <- delta/sigma
pwr.t.test(d = d, sig.level = alpha, power = power, type = 'two.sample')
pwr.t.test(d = d, sig.level = alpha, n=20, power = NULL, type = 'two.sample')
pwr.t.test(d = d, sig.level = alpha, n=10, power = NULL, type = 'two.sample')
delta <- seq(0.1, 0.7, .1)
nd <- length(delta)
# anticipated variability
sigma <- seq(0.1,0.5,.1)
ns <- length(sigma)
samsize <- matrix(0, nrow=ns*nd, ncol = 3)
counter <- 0
for (i in 1:nd){
for (j in 1:ns){
result <- pwr.t.test(d = delta[i]/sigma[j],
sig.level = alpha,
power = power,
type = "two.sample")
counter <- counter + 1
samsize[counter,1] <- delta[i]
samsize[counter,2] <- sigma[j]
samsize[counter,3] <- ceiling(result$n)
}
}
colnames(samsize) <- c("desiredlog2FC","variability","samplesize")
samsize <- as.data.frame(samsize)
samsize$variability <- as.factor(samsize$variability)
ggplot(data=samsize, aes(x=desiredlog2FC, y=samplesize, group = variability, colour = variability)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
labs(title="Significance level=0.05, Power=0.95", x="Anticipated log2 fold change", y='Sample Size (n)') +
theme(plot.title = element_text(size=20, colour="darkblue"),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
axis.text.x = element_text(size=13))
TCGA.CRC <- read.csv("./data/TCGA_sample_information.csv")
head(TCGA.CRC)
head(TCGA.CRC)
dim(TCGA.CRC)
unique(TCGA.CRC$Gender)
class(TCGA.CRC$Gender)
unique(TCGA.CRC$Cancer)
unique(TCGA.CRC$BRAF.mutation)
unique(TCGA.CRC$history_of_colon_polyps)
class(TCGA.CRC$Cancer)
class(TCGA.CRC$BRAF.mutation)
class(TCGA.CRC$history_of_colon_polyps)
?table
unique(TCGA.CRC$TCGA.participant.ID)
table(TCGA.CRC$TCGA.participant.ID)
TCGA.CRC[TCGA.CRC$TCGA.participant.ID == 'TCGA-AA-A00A', ]
unique(TCGA.CRC$Gender)
class(TCGA.CRC$Gender)
unique(TCGA.CRC$Gender)
class(TCGA.CRC$Gender)
table(TCGA.CRC$Gender)
unique(TCGA.CRC$TCGA.participant.ID)
length(unique(TCGA.CRC$TCGA.participant.ID))
dim(TCGA.CRC)
dim(TCGA.CRC$Gender)
?dim
unique(TCGA.CRC$Gender)
class(TCGA.CRC$Gender)
colnames(TCGA.CRC)
table(TCGA.CRC$Gender)
unique(TCGA.CRC$TCGA.participant.ID)
length(unique(TCGA.CRC$TCGA.participant.ID))
table(TCGA.CRC$TCGA.participant.ID)
countID <- table(TCGA.CRC$TCGA.participant.ID)
countID
countID[countID > 1]
countID <- table(TCGA.CRC$TCGA.participant.ID)
countID[countID > 1]
unique(countID)
countID[countID > 1]
TCGA.CRC[TCGA.CRC$TCGA.participant.ID == 'TCGA-AA-A00A', ]
TCGA.CRC[TCGA.CRC$TCGA.participant.ID == 'TCGA-AA-A00A', ]
TCGA.CRC <- TCGA.CRC[!duplicated(TCGA.CRC), ]
TCGA.CRC
dim(TCGA.CRC)
?table
table(TCGA.CRC$Cancer, TCGA.CRC$history_of_colon_polyps)
ov <- table(TCGA.CRC$Cancer, TCGA.CRC$history_of_colon_polyps)
ov
dotchart(t(ov), xlab = "Observed counts")
xtabs(TCGA.CRC$Cancer, TCGA.CRC$history_of_colon_polyps)
ov <- table(TCGA.CRC$Cancer, TCGA.CRC$history_of_colon_polyps)
ov
dotchart(t(ov), xlab = "Observed counts")
head(TCGA.CRC)
cancer.polyps <- table(TCGA.CRC$Cancer, TCGA.CRC$history_of_colon_polyps)
cancer.polyps
dotchart(t(cancer.polyps), xlab = "Observed counts")
dotchart(cancer.polyps, xlab = "Observed counts")
dotchart(t(cancer.polyps), xlab = "Observed counts")
cancer.polyps
dotchart(t(cancer.polyps), xlab = "Observed counts")
t(cancer.polyps)
dotchart(t(cancer.polyps), xlab = "Observed counts")
pt <- prop.test(cancer.polyps)
pt
names(pt)
pt$estimate
21/(21+29)
9/24
19/24
?prop.test
smokers  <- c( 83, 90, 129, 70 )
patients <- c( 86, 93, 136, 82 )
prop.test(smokers, patients)
cancer.polyps
apply(cancer.polyps, 1, sum)
pt <- prop.test(polyps=cancer.polyps[,2], polyps= apply(cancer.polyps, 1, sum))
cancer.polyps[,2]
pt <- prop.test(polyps=cancer.polyps[,2], sample= apply(cancer.polyps, 1, sum))
cancer.polyps <- table(TCGA.CRC$history_of_colon_polyps, TCGA.CRC$Cancer)
cancer.polyps
dotchart(cancer.polyps, xlab = "Observed counts")
cancer.polyps
polyps <- cancer.polyps[2, ]
polyps
cancer <- apply(cancer.polyps, 1, sum)
cancer
cancer <- apply(cancer.polyps, 2, sum)
cancer
pt <- prop.test(polyps, cander)
pt <- prop.test(polyps, cancer)
pt
5/24
names(pt)
pt$estimate
pt$statistic
pt$parameter
ft <- fisher.test(cancer.polyps)
ft$estimate
ft
cancer.polyps
(29/19)/(21/5)
29*5/(21*19)
21*19/(29*5)
?fisher.test
cancer.polyps
TeaTasting <-
matrix(c(3, 1, 1, 3),
nrow = 2,
dimnames = list(Guess = c("Milk", "Tea"),
Truth = c("Milk", "Tea")))
fisher.test(TeaTasting, alternative = "greater")
TeaTasting
ft <- fisher.test(cancer.polyps)
ft
178*648/(138*370)
178*648/(138*570)
?fisher.test
head(TCGA.CRC)
table(TCGA.CRC$history_of_colon_polyps, TCGA.CRC$Gender)
table(TCGA.CRC$Gender, TCGA.CRC$Cancer)
test <- table(TCGA.CRC$Gender, TCGA.CRC$Cancer)
test
dotchart(test, xlab = "Observed counts")
polyps <- test[2, ]
cancer <- apply(test, 2, sum)
pt <- prop.test(polyps, cancer)
pt
table(TCGA.CRC$BRAF.mutation)
test <- table(TCGA.CRC$BRAF.mutation, TCGA.CRC$Cancer)
test
dotchart(test, xlab = "Observed counts")
polyps <- test[2, ]
cancer <- apply(test, 2, sum)
pt <- prop.test(polyps, cancer)
pt
polyps
cancer
test <- table(TCGA.CRC$Gender, TCGA.CRC$Cancer)
test
polyps <- test[2, ]
cancer <- apply(test, 2, sum)
pt <- prop.test(polyps, cancer)
pt
test <- table(TCGA.CRC$BRAF.mutation, TCGA.CRC$history_of_colon_polyps)
test
dotchart(test, xlab = "Observed counts")
polyps <- test[2, ]
cancer <- apply(test, 2, sum)
pt <- prop.test(polyps, cancer)
pt
test <- table(TCGA.CRC$Gender, TCGA.CRC$Cancer)
test
dotchart(test, xlab = "Observed counts")
polyps <- test[2, ]
cancer <- apply(test, 2, sum)
pt <- prop.test(polyps, cancer)
pt
cancer.gender <- table(TCGA.CRC$Gender, TCGA.CRC$Cancer)
cancer.gender
dotchart(cancer.gender, xlab = "Observed counts")
male <- cancer.gender[2, ]
male
cancer <- apply(cancer.gender, 2, sum)
cancer
pt <- prop.test(male, cancer)
pt
14/24
cancer.polyps
install.packages("combinat")
combn(6,4)
dim(combn(6,4))
dim(combn(48,29))[2] * dim(combn(26,21))[2] / dim(combn(74, 50))[2]
comb <- function(n,x){ return(factorial(n)/ (factorial(x)*factorial(n-x)))}
comb(48,29)*comb(26,21)/comb(74,50)
ft <- fisher.test(cancer.polyps)
ft
cancer.polyps
a <- matrix(c(25,30,25,30), nrow=2)
a
fisher.test(a)
fisher.test(t(a))
cancer.polyps
pt$statistic
polyps <- cancer.polyps[2, ]
cancer <- apply(cancer.polyps, 2, sum)
pt <- prop.test(polyps, cancer)
pt
# name of output
names(pt)
# proportion in each group
pt$estimate
# test statistic value
pt$statistic
?prop.test
chisq.test(cancer.polyps)
pt
cancer.polyps
z.prop.p <- function(x1, x2, n1, n2) {
pi_1 <- x1/n1
pi_2 <- x2/n2
numerator <- pi_1 - pi_2
denominator <- sqrt(((pi_1*(1-pi_1))/n1 + (pi_2*(1-pi_2))/n2))
stat <- numerator/denominator
pvalue <- 2 * (1 - pnorm(abs(stat)))
return(pvalue)
}
z.prop.p(cancer.polyps[2,1], cancer.polyps[2,2], sum(cancer.polyps[,1]), sum(cancer.polyps[,2]))
x1 <- cancer.polyps[2,1]
xa
x1
x2 <- cancer.polyps[2,2]
x2
sum(cancer.polyps[,1])
sum(cancer.polyps[,2])
n1 <- sum(cancer.polyps[,1])
n1
n2 <- sum(cancer.polyps[,2])
n2
pi_1 <- x1/n1
pi_2 <- x2/n2
numerator <- pi_1 - pi_2
denominator <- sqrt(((pi_1*(1-pi_1))/n1 + (pi_2*(1-pi_2))/n2))
stat <- numerator/denominator
pvalue <- 2 * (1 - pnorm(abs(stat)))
z.prop.p <- function(x1, x2, n1, n2) {
pi_1 <- x1/n1
pi_2 <- x2/n2
numerator <- pi_1 - pi_2
p_common <- (x1+x2)/(n1+n2)
denominator <- sqrt(p_common * (1-p_common) * (1/n1 + 1/n2))
stat <- numerator/denominator
pvalue <- 2 * (1 - pnorm(abs(stat)))
return(pvalue)
}
z.prop.p(cancer.polyps[2,1], cancer.polyps[2,2], sum(cancer.polyps[,1]), sum(cancer.polyps[,2]))
cancer.polyps
pi_1 <- x1/n1
pi_2 <- x2/n2
numerator <- pi_1 - pi_2
p_common <- (x1+x2)/(n1+n2)
denominator <- sqrt(p_common * (1-p_common) * (1/n1 + 1/n2))
stat <- numerator/denominator
polyps <- cancer.polyps[2, ]
cancer <- apply(cancer.polyps, 2, sum)
pt <- prop.test(polyps, cancer)
pt
pt <- prop.test(polyps, cancer, correct = FALSE)
pt
z.prop.p(cancer.polyps[2,1], cancer.polyps[2,2], sum(cancer.polyps[,1]), sum(cancer.polyps[,2]))
getwd()
load('./data/iprg.rda')
oneproteindata <- iprg[iprg$Protein == "sp|P44015|VAC2_YEAST", ]
oneproteindata
sub.mean <- aggregate(Log2Intensity ~ Condition,
data = oneproteindata,
FUN = mean)
sub.mean
sub.sd <- aggregate(Log2Intensity ~ Condition,
data = oneproteindata, FUN = sd)
sub.sd
sub.len <- aggregate(Log2Intensity ~ Condition,
data = oneproteindata,
FUN = length)
sub.len
sub.se <- sqrt(sub.sd$Log2Intensity^2 / sub.len$Log2Intensity)
sub.se
(grp <- paste0("Condition", 1:4))
## It is equivalent to paste("Condition", 1:4, sep="")
summaryresult <- data.frame(Group = grp,
mean = sub.mean$Log2Intensity,
sd = sub.sd$Log2Intensity,
se = sub.se,
length = sub.len$Log2Intensity)
summaryresult
summaryresult$ciw.lower.95 <- summaryresult$mean -
qt(0.975, summaryresult$len - 1) * summaryresult$se
summaryresult$ciw.upper.95 <- summaryresult$mean +
qt(0.975, summaryresult$len - 1) * summaryresult$se
summaryresult
oneproteindata <- iprg[iprg$Protein == "sp|P44015|VAC2_YEAST", ]
oneproteindata.condition12 <- oneproteindata[oneproteindata$Condition %in%
c('Condition1', 'Condition2'), ]
oneproteindata.condition12
table(oneproteindata.condition12[, c("Condition", "BioReplicate")])
## remove duplicated
oneproteindata.condition12 <- droplevels(oneproteindata.condition12)
table(oneproteindata.condition12[, c("Condition", "BioReplicate")])
result <- t.test(Log2Intensity ~ Condition,
data = oneproteindata.condition12,
var.equal = FALSE)
result
class(result)
names(result)
result$estimate
library("pwr")
alpha <- 0.05
# Power = 1 - beta
power <- 0.95
delta <- 1
# anticipated variability
sigma <- 0.9
# Effect size
# It quantifies the size of the difference between two groups
d <- delta/sigma
pwr.t.test(d = d, sig.level = alpha, power = power, type = 'two.sample')
## **Challenge**
## * Calculate power with 10 samples and the same parameters as above.
# anticipated log2 fold change
delta <- seq(0.1, 0.7, .1)
nd <- length(delta)
# anticipated variability
sigma <- seq(0.1,0.5,.1)
ns <- length(sigma)
# obtain sample sizes
samsize <- matrix(0, nrow=ns*nd, ncol = 3)
counter <- 0
for (i in 1:nd){
for (j in 1:ns){
result <- pwr.t.test(d = delta[i]/sigma[j],
sig.level = alpha,
power = power,
type = "two.sample")
counter <- counter + 1
samsize[counter,1] <- delta[i]
samsize[counter,2] <- sigma[j]
samsize[counter,3] <- ceiling(result$n)
}
}
colnames(samsize) <- c("desiredlog2FC","variability","samplesize")
library("ggplot2")
samsize <- as.data.frame(samsize)
samsize$variability <- as.factor(samsize$variability)
ggplot(data=samsize, aes(x=desiredlog2FC, y=samplesize, group = variability, colour = variability)) +
geom_line() +
geom_point(size=2, shape=21, fill="white") +
labs(title="Significance level=0.05, Power=0.95", x="Anticipated log2 fold change", y='Sample Size (n)') +
theme(plot.title = element_text(size=20, colour="darkblue"),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
axis.text.x = element_text(size=13))
TCGA.CRC <- read.csv("./data/TCGA_sample_information.csv")
head(TCGA.CRC)
dim(TCGA.CRC)
dim(TCGA.CRC$Gender) # dim function is for matrix, array or data frame.
## check unique information of Gender column.
unique(TCGA.CRC$Gender)
class(TCGA.CRC$Gender)
table(TCGA.CRC$Gender)
unique(TCGA.CRC$TCGA.participant.ID)
length(unique(TCGA.CRC$TCGA.participant.ID))
countID <- table(TCGA.CRC$TCGA.participant.ID)
countID
unique(countID)
countID[countID > 1]
TCGA.CRC[TCGA.CRC$TCGA.participant.ID == 'TCGA-AA-A00A', ]
TCGA.CRC <- TCGA.CRC[!duplicated(TCGA.CRC), ]
## Generate 2-way contingency tables
cancer.polyps <- table(TCGA.CRC$history_of_colon_polyps, TCGA.CRC$Cancer)
cancer.polyps
dotchart(cancer.polyps, xlab = "Observed counts")
## Comparison of two proportions
polyps <- cancer.polyps[2, ]
cancer <- apply(cancer.polyps, 2, sum)
pt <- prop.test(polyps, cancer)
pt
# name of output
names(pt)
save(summaryresult, file='summaryresult.rda')
length(iprg)
head(iprg)
nrow(iprg)
